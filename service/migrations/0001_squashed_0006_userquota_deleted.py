# Generated by Django 3.1.5 on 2021-01-12 02:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataCenter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('status', models.SmallIntegerField(choices=[(1, '开启状态'), (2, '关闭状态')], default=1, verbose_name='服务状态')),
                ('desc', models.CharField(blank=True, max_length=255, verbose_name='描述')),
                ('users', models.ManyToManyField(blank=True, related_name='data_center_set', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'ordering': ['id'],
                'verbose_name': '机构',
                'verbose_name_plural': '机构',
            },
        ),
        migrations.CreateModel(
            name='UserQuota',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('private_ip_total', models.IntegerField(default=0, verbose_name='总私网IP数')),
                ('private_ip_used', models.IntegerField(default=0, verbose_name='已用私网IP数')),
                ('public_ip_total', models.IntegerField(default=0, verbose_name='总公网IP数')),
                ('public_ip_used', models.IntegerField(default=0, verbose_name='已用公网IP数')),
                ('vcpu_total', models.IntegerField(default=0, verbose_name='总CPU核数')),
                ('vcpu_used', models.IntegerField(default=0, verbose_name='已用CPU核数')),
                ('ram_total', models.IntegerField(default=0, verbose_name='总内存大小(MB)')),
                ('ram_used', models.IntegerField(default=0, verbose_name='已用内存大小(MB)')),
                ('disk_size_total', models.IntegerField(default=0, verbose_name='总硬盘大小(GB)')),
                ('disk_size_used', models.IntegerField(default=0, verbose_name='已用硬盘大小(GB)')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_quota', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('expiration_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='过期时间')),
                ('is_email', models.BooleanField(default=False, help_text='是否邮件通知用户配额即将到期', verbose_name='是否邮件通知')),
                ('tag', models.SmallIntegerField(choices=[(1, '普通配额'), (2, '试用配额')], default=1, verbose_name='配额类型')),
                ('deleted', models.BooleanField(default=False, verbose_name='删除')),
            ],
            options={
                'verbose_name': '用户资源配额',
                'verbose_name_plural': '用户资源配额',
                'db_table': 'user_quota',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ServiceConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='服务名称')),
                ('region_id', models.CharField(blank=True, default='', max_length=128, verbose_name='服务区域/分中心ID')),
                ('service_type', models.SmallIntegerField(choices=[(0, 'EVCloud'), (1, 'OpenStack'), (2, 'Vmware')], default=0, verbose_name='服务平台类型')),
                ('endpoint_url', models.CharField(help_text='http(s)://{hostname}:{port}/', max_length=255, unique=True, verbose_name='服务地址url')),
                ('api_version', models.CharField(default='v3', help_text='预留，主要EVCloud使用', max_length=64, verbose_name='API版本')),
                ('username', models.CharField(help_text='用于此服务认证的用户名', max_length=128, verbose_name='用户名')),
                ('password', models.CharField(max_length=128, verbose_name='密码')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('remarks', models.CharField(blank=True, default='', max_length=255, verbose_name='备注')),
                ('need_vpn', models.BooleanField(default=True, verbose_name='是否需要VPN')),
                ('status', models.SmallIntegerField(choices=[(1, '开启状态'), (2, '关闭状态')], default=1, verbose_name='服务状态')),
                ('vpn_api_version', models.CharField(blank=True, default='v3', help_text='预留，主要EVCloud使用', max_length=64, verbose_name='VPN服务API版本')),
                ('vpn_endpoint_url', models.CharField(blank=True, default='', help_text='http(s)://{hostname}:{port}/', max_length=255, verbose_name='VPN服务地址url')),
                ('vpn_password', models.CharField(blank=True, default='', max_length=128, verbose_name='VPN服务密码')),
                ('vpn_username', models.CharField(blank=True, default='', help_text='用于此服务认证的用户名', max_length=128, verbose_name='VPN服务用户名')),
                ('data_center', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_set', to='service.datacenter', verbose_name='数据中心')),
                ('extra', models.CharField(blank=True, default='', help_text='json格式', max_length=1024, verbose_name='其他配置')),
            ],
            options={
                'verbose_name': '服务接入配置',
                'verbose_name_plural': '服务接入配置',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='DataCenterPrivateQuota',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('private_ip_total', models.IntegerField(default=0, verbose_name='总私网IP数')),
                ('private_ip_used', models.IntegerField(default=0, verbose_name='已用私网IP数')),
                ('public_ip_total', models.IntegerField(default=0, verbose_name='总公网IP数')),
                ('public_ip_used', models.IntegerField(default=0, verbose_name='已用公网IP数')),
                ('vcpu_total', models.IntegerField(default=0, verbose_name='总CPU核数')),
                ('vcpu_used', models.IntegerField(default=0, verbose_name='已用CPU核数')),
                ('ram_total', models.IntegerField(default=0, verbose_name='总内存大小(MB)')),
                ('ram_used', models.IntegerField(default=0, verbose_name='已用内存大小(MB)')),
                ('disk_size_total', models.IntegerField(default=0, verbose_name='总硬盘大小(GB)')),
                ('disk_size_used', models.IntegerField(default=0, verbose_name='已用硬盘大小(GB)')),
                ('enable', models.BooleanField(default=True, help_text='选中，资源配额生效；未选中，无法申请分中心资源', verbose_name='有效状态')),
                ('data_center', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_center_private_quota', to='service.datacenter', verbose_name='数据中心')),
            ],
            options={
                'verbose_name': '数据中心私有资源配额',
                'verbose_name_plural': '数据中心私有资源配额',
                'db_table': 'data_center_private_quota',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='DataCenterShareQuota',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('private_ip_total', models.IntegerField(default=0, verbose_name='总私网IP数')),
                ('private_ip_used', models.IntegerField(default=0, verbose_name='已用私网IP数')),
                ('public_ip_total', models.IntegerField(default=0, verbose_name='总公网IP数')),
                ('public_ip_used', models.IntegerField(default=0, verbose_name='已用公网IP数')),
                ('vcpu_total', models.IntegerField(default=0, verbose_name='总CPU核数')),
                ('vcpu_used', models.IntegerField(default=0, verbose_name='已用CPU核数')),
                ('ram_total', models.IntegerField(default=0, verbose_name='总内存大小(MB)')),
                ('ram_used', models.IntegerField(default=0, verbose_name='已用内存大小(MB)')),
                ('disk_size_total', models.IntegerField(default=0, verbose_name='总硬盘大小(GB)')),
                ('disk_size_used', models.IntegerField(default=0, verbose_name='已用硬盘大小(GB)')),
                ('enable', models.BooleanField(default=True, help_text='选中，资源配额生效；未选中，无法申请分中心资源', verbose_name='有效状态')),
                ('data_center', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_center_share_quota', to='service.datacenter', verbose_name='数据中心')),
            ],
            options={
                'verbose_name': '数据中心分享资源配额',
                'verbose_name_plural': '数据中心分享资源配额',
                'db_table': 'data_center_share_quota',
                'ordering': ['-id'],
            },
        ),
    ]
