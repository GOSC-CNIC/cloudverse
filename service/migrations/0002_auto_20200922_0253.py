# Generated by Django 2.2.16 on 2020-09-22 02:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('service', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataCenter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('status', models.SmallIntegerField(choices=[(1, '开启状态'), (2, '关闭状态')], default=1, verbose_name='服务状态')),
                ('desc', models.CharField(blank=True, max_length=255, verbose_name='描述')),
                ('users', models.ManyToManyField(blank=True, related_name='data_center_set', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'ordering': ['-id'],
                'verbose_name': '数据中心',
                'verbose_name_plural': '数据中心'
            },
        ),
        migrations.RemoveField(
            model_name='serviceconfig',
            name='active',
        ),
        migrations.AddField(
            model_name='serviceconfig',
            name='need_vpn',
            field=models.BooleanField(default=True, verbose_name='是否需要VPN'),
        ),
        migrations.AddField(
            model_name='serviceconfig',
            name='status',
            field=models.SmallIntegerField(choices=[(1, '开启状态'), (2, '关闭状态')], default=1, verbose_name='服务状态'),
        ),
        migrations.AddField(
            model_name='serviceconfig',
            name='vpn_api_version',
            field=models.CharField(blank=True, default='v3', help_text='预留，主要EVCloud使用', max_length=64, verbose_name='API版本'),
        ),
        migrations.AddField(
            model_name='serviceconfig',
            name='vpn_endpoint_url',
            field=models.CharField(blank=True, default='', help_text='http(s)://{hostname}:{port}/', max_length=255, verbose_name='服务地址url'),
        ),
        migrations.AddField(
            model_name='serviceconfig',
            name='vpn_password',
            field=models.CharField(blank=True, default='', max_length=128, verbose_name='密码'),
        ),
        migrations.AddField(
            model_name='serviceconfig',
            name='vpn_username',
            field=models.CharField(blank=True, default='', help_text='用于此服务认证的用户名', max_length=128, verbose_name='用户名'),
        ),
        migrations.AlterField(
            model_name='serviceconfig',
            name='endpoint_url',
            field=models.CharField(help_text='http(s)://{hostname}:{port}/', max_length=255, unique=True, verbose_name='服务地址url'),
        ),
        migrations.CreateModel(
            name='UserQuota',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('private_ip_total', models.IntegerField(default=0, verbose_name='总私网IP数')),
                ('private_ip_used', models.IntegerField(default=0, verbose_name='已用私网IP数')),
                ('public_ip_total', models.IntegerField(default=0, verbose_name='总公网IP数')),
                ('public_ip_used', models.IntegerField(default=0, verbose_name='已用公网IP数')),
                ('vcpu_total', models.IntegerField(default=0, verbose_name='总CPU核数')),
                ('vcpu_used', models.IntegerField(default=0, verbose_name='已用CPU核数')),
                ('ram_total', models.IntegerField(default=0, verbose_name='总内存大小(MB)')),
                ('ram_used', models.IntegerField(default=0, verbose_name='已用内存大小(MB)')),
                ('disk_size_total', models.IntegerField(default=0, verbose_name='总硬盘大小(GB)')),
                ('disk_size_used', models.IntegerField(default=0, verbose_name='已用硬盘大小(GB)')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_quota', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户资源配额',
                'verbose_name_plural': '用户资源配额',
                'db_table': 'user_quota',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ServiceQuota',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='ID')),
                ('private_ip_total', models.IntegerField(default=0, verbose_name='总私网IP数')),
                ('private_ip_used', models.IntegerField(default=0, verbose_name='已用私网IP数')),
                ('public_ip_total', models.IntegerField(default=0, verbose_name='总公网IP数')),
                ('public_ip_used', models.IntegerField(default=0, verbose_name='已用公网IP数')),
                ('vcpu_total', models.IntegerField(default=0, verbose_name='总CPU核数')),
                ('vcpu_used', models.IntegerField(default=0, verbose_name='已用CPU核数')),
                ('ram_total', models.IntegerField(default=0, verbose_name='总内存大小(MB)')),
                ('ram_used', models.IntegerField(default=0, verbose_name='已用内存大小(MB)')),
                ('disk_size_total', models.IntegerField(default=0, verbose_name='总硬盘大小(GB)')),
                ('disk_size_used', models.IntegerField(default=0, verbose_name='已用硬盘大小(GB)')),
                ('enable', models.BooleanField(help_text='选中，资源配额生效；未选中，无法申请分中心资源', verbose_name='有效状态')),
                ('data_center', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='data_center_quota', to='service.DataCenter', verbose_name='数据中心')),
            ],
            options={
                'verbose_name': '服务中心资源配额',
                'verbose_name_plural': '服务中心资源配额',
                'db_table': 'service_quota',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='serviceconfig',
            name='data_center',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='service.DataCenter', verbose_name='数据中心'),
        ),
    ]
