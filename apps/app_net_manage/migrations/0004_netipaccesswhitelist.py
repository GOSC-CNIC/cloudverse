# Generated by Django 4.2.9 on 2024-06-03 01:25

from django.db import migrations, models

from apps.app_global.models import IPAccessWhiteList
from apps.app_net_manage.models import NetIPAccessWhiteList


def do_nothing(apps, schema_editor):
    print('do nothing')


def run_copy_ip_whitelist(apps, schema_editor):
    for wl in IPAccessWhiteList.objects.filter(
            module_name__in=['netflow', 'netbox-link']).all():
        try:
            wl: IPAccessWhiteList
            if wl.remark:
                remark = wl.remark
            else:
                remark = wl.get_module_name_display()

            net_wl = NetIPAccessWhiteList(ip_value=wl.ip_value, remark=remark)
            net_wl.clean()
            net_wl.save(force_insert=True)
        except Exception as exc:
            pass

    print('[Ok] Copy全局IP白名单表网络配置数据 to app_net_manage 白名单表')


class Migration(migrations.Migration):

    dependencies = [
        ('app_net_manage', '0003_netmanageuserrole'),
    ]

    operations = [
        migrations.CreateModel(
            name='NetIPAccessWhiteList',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ip_value', models.CharField(help_text='192.168.1.1、 192.168.1.1/24、192.168.1.66 - 192.168.1.100', max_length=100, verbose_name='IP')),
                ('remark', models.CharField(blank=True, default='', max_length=255, verbose_name='备注')),
                ('creation_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '网络管理IP访问白名单',
                'verbose_name_plural': '网络管理IP访问白名单',
                'db_table': 'net_ipaccesswhitelist',
                'ordering': ['-creation_time'],
            },
        ),
        migrations.RunPython(run_copy_ip_whitelist, reverse_code=do_nothing),
    ]
