# Generated by Django 4.2.9 on 2024-05-30 06:53

from django.db import migrations, connection, transaction


def do_nothing(apps, schema_editor):
    print('do nothing')


def reverse_copy_org(apps, schema_editor):
    with transaction.atomic(savepoint=False):
        with connection.cursor() as cursor:
            cursor.execute('DELETE FROM `net_manage_org_virt_obj`;')    # TRUNCATE会受外键约束限制

    print('[Ok] Delete 机构二级表数据 from app_net_manage')


def run_copy_org_contacts(apps, schema_editor):
    with transaction.atomic():
        with connection.cursor() as cursor:
            # 复制机构二级和联系人
            cursor.execute('INSERT INTO `net_manage_org_virt_obj`(`id`, `name`,`organization_id`, `creation_time`,`remark`'
                           ') SELECT `id`, `name`,`organization_id`, `creation_time`,`remark` FROM `netbox_org_virt_obj`;')
            cursor.execute('INSERT INTO `net_manage_contact_person`(`id`, `name`, `telephone`, `email`, `address`, '
                           '`creation_time`, `update_time`, `remarks`) '
                           'SELECT `id`, `name`, `telephone`, `email`, `address`, '
                           '`creation_time`, `update_time`, `remarks` FROM `netbox_contact_person`;')
            # 复制机构二级和联系人多对多关系表
            cursor.execute('INSERT INTO `net_manage_org_obj_contacts`(`id`, `orgvirtualobject_id`, `contactperson_id`) '
                           'SELECT `id`, `orgvirtualobject_id`, `contactperson_id` FROM `netbox_org_obj_contacts`;')

    print('[Ok] Copy机构二级和联系人表数据 to app_net_manage')


def reverse_copy_org_contacts(apps, schema_editor):
    with transaction.atomic(savepoint=False):
        with connection.cursor() as cursor:
            # 清空制机构二级和联系人多对多关系表
            cursor.execute('TRUNCATE TABLE `net_manage_org_obj_contacts`;')
            # 清空制机构二级和联系人表
            cursor.execute('TRUNCATE TABLE `net_manage_contact_person`;')
            # cursor.execute('DELETE FROM `netbox_org_virt_obj`;')    # TRUNCATE会受外键约束限制

    print('[Ok] Delete 机构二级联系人和关系表数据 from app_net_manage')


class Migration(migrations.Migration):

    dependencies = [
        ('app_net_manage', '0001_initial'),
    ]

    operations = [
        # 顺序要考虑到外键约束，run按正序执行，reverse按倒序执行
        migrations.RunPython(do_nothing, reverse_code=reverse_copy_org),
        migrations.RunPython(run_copy_org_contacts, reverse_code=reverse_copy_org_contacts),
    ]
