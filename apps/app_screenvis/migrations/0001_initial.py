# Generated by Django 4.2.9 on 2024-03-26 09:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DataCenter',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('creation_time', models.DateTimeField(verbose_name='创建时间')),
                ('update_time', models.DateTimeField(verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
                ('name_en', models.CharField(default='', max_length=255, verbose_name='英文名称')),
                ('longitude', models.FloatField(blank=True, default=0, verbose_name='经度')),
                ('latitude', models.FloatField(blank=True, default=0, verbose_name='纬度')),
                ('sort_weight', models.IntegerField(default=0, help_text='值越小排序越靠前', verbose_name='排序值')),
                ('remark', models.TextField(blank=True, default='', max_length=10000, verbose_name='数据中心备注')),
                ('metric_endpoint_url', models.CharField(blank=True, default='', help_text='http(s)://example.cn/', max_length=255, verbose_name='指标监控系统查询接口')),
                ('metric_receive_url', models.CharField(blank=True, default='', help_text='http(s)://example.cn/', max_length=255, verbose_name='指标监控系统接收接口')),
                ('metric_remark', models.CharField(blank=True, default='', max_length=255, verbose_name='指标监控系统备注')),
                ('loki_endpoint_url', models.CharField(blank=True, default='', help_text='http(s)://example.cn/', max_length=255, verbose_name='日志聚合系统查询接口')),
                ('loki_receive_url', models.CharField(blank=True, default='', help_text='http(s)://example.cn/', max_length=255, verbose_name='日志聚合系统接收接口')),
                ('loki_remark', models.CharField(blank=True, default='', max_length=255, verbose_name='日志聚合系统备注')),
            ],
            options={
                'verbose_name': '机构数据中心',
                'verbose_name_plural': '机构数据中心',
                'db_table': 'screenvis_data_center',
                'ordering': ['sort_weight'],
            },
        ),
        migrations.CreateModel(
            name='LogMonitorUnit',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('creation_time', models.DateTimeField(verbose_name='创建时间')),
                ('update_time', models.DateTimeField(verbose_name='更新时间')),
                ('name', models.CharField(max_length=50, verbose_name='日志单元名称')),
                ('name_en', models.CharField(default='', max_length=128, verbose_name='日志单元英文名称')),
                ('log_type', models.CharField(choices=[('http', 'HTTP'), ('nat', 'NAT')], default='http', max_length=16, verbose_name='日志类型')),
                ('job_tag', models.CharField(default='', help_text='Loki日志中对应的job标识，模板xxx_log', max_length=64, verbose_name='日志单元标识')),
                ('sort_weight', models.IntegerField(default=0, help_text='值越小排序越靠前', verbose_name='排序值')),
                ('remark', models.CharField(blank=True, default='', max_length=255, verbose_name='备注')),
            ],
            options={
                'verbose_name': '日志单元',
                'verbose_name_plural': '日志单元',
                'db_table': 'screenvis_log_unit',
                'ordering': ['sort_weight'],
            },
        ),
        migrations.CreateModel(
            name='MetricMonitorUnit',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('creation_time', models.DateTimeField(verbose_name='创建时间')),
                ('update_time', models.DateTimeField(verbose_name='更新时间')),
                ('name', models.CharField(default='', max_length=255, verbose_name='名称')),
                ('name_en', models.CharField(default='', max_length=255, verbose_name='英文名称')),
                ('unit_type', models.CharField(choices=[('host', '主机'), ('ceph', 'Ceph'), ('tidb', 'TiDB')], max_length=16, verbose_name='类型')),
                ('job_tag', models.CharField(default='', help_text='模板：xxx_xxx_metric', max_length=255, verbose_name='标签名称')),
                ('prometheus', models.CharField(blank=True, default='', help_text='http(s)://example.cn/', max_length=255, verbose_name='Prometheus接口')),
                ('remark', models.TextField(blank=True, default='', verbose_name='备注')),
                ('sort_weight', models.IntegerField(default=0, help_text='值越小排序越靠前', verbose_name='排序值')),
                ('grafana_url', models.CharField(blank=True, default='', max_length=255, verbose_name='Grafana连接')),
                ('dashboard_url', models.CharField(blank=True, default='', max_length=255, verbose_name='Dashboard连接')),
            ],
            options={
                'verbose_name': '指标数据监控单元',
                'verbose_name_plural': '指标数据监控单元',
                'db_table': 'screenvis_metric_unit',
                'ordering': ['sort_weight'],
            },
        ),
        migrations.CreateModel(
            name='ScreenConfig',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[
                    ('org_name', '机构名称'), ('org_name_en', '机构英文名称'),
                    ('probe_task_endpoint_url', '站点监控探针任务更新服务地址'),
                    ('probe_task_username', '站点监控探针任务更新服务认证用户名'),
                    ('probe_task_password', '站点监控探针任务更新服务认证密码'),
                    ('probe_query_endpoint_url', '站点监控数据查询服务地址'),
                    ('metric_query_endpoint_url', '数据中心指标数据查询服务地址'),
                ], max_length=32, verbose_name='配置名称')),
                ('value', models.CharField(default='', max_length=255, verbose_name='配置内容')),
                ('remark', models.CharField(blank=True, max_length=255, verbose_name='备注')),
                ('creation_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '01_大屏展示配置',
                'verbose_name_plural': '01_大屏展示配置',
                'db_table': 'screenvis_config',
                'ordering': ['name'],
            },
        ),
        migrations.AddConstraint(
            model_name='screenconfig',
            constraint=models.UniqueConstraint(fields=('name',), name='unique_config_name'),
        ),
        migrations.AddField(
            model_name='metricmonitorunit',
            name='data_center',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='app_screenvis.datacenter', verbose_name='数据中心'),
        ),
        migrations.AddField(
            model_name='logmonitorunit',
            name='data_center',
            field=models.ForeignKey(db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='app_screenvis.datacenter', verbose_name='数据中心'),
        ),
    ]
