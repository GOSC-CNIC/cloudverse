# Generated by Django 4.2.9 on 2024-02-29 03:01

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="VtReport",
            fields=[
                (
                    "id",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("filename", models.CharField(max_length=255, verbose_name="文件名")),
                (
                    "type",
                    models.CharField(
                        choices=[("html", "HTML格式"), ("pdf", "PDF格式")],
                        default="html",
                        max_length=8,
                        verbose_name="漏扫报告类型",
                    ),
                ),
                ("content", models.BinaryField(null=True, verbose_name="漏扫报告内容")),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="修改时间"),
                ),
            ],
            options={
                "verbose_name": "任务扫描报告",
                "verbose_name_plural": "任务扫描报告",
                "ordering": ["-create_time"],
            },
        ),
        migrations.CreateModel(
            name="VtScanner",
            fields=[
                (
                    "id",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="漏扫节点名称"
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("web", "站点扫描器"), ("host", "主机扫描器")],
                        max_length=16,
                        verbose_name="漏扫节点类型",
                    ),
                ),
                (
                    "engine",
                    models.CharField(
                        choices=[("zaproxy", "ZAP"), ("gvm", "GVM")],
                        max_length=16,
                        verbose_name="漏扫引擎类型",
                    ),
                ),
                (
                    "ipaddr",
                    models.CharField(max_length=16, verbose_name="漏扫节点地址"),
                ),
                ("port", models.IntegerField(verbose_name="漏扫节点端口")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("enable", "服务中"),
                            ("disable", "停止服务"),
                            ("deleted", "删除"),
                        ],
                        default="enable",
                        max_length=16,
                        verbose_name="服务状态",
                    ),
                ),
                (
                    "key",
                    models.CharField(
                        max_length=64,
                        verbose_name="连接验证Key",
                    ),
                ),
                ("max_concurrency", models.IntegerField(verbose_name="漏扫最大并发数")),
            ],
            options={
                "verbose_name": "漏洞扫描器",
                "verbose_name_plural": "漏洞扫描器",
                "ordering": ["-type"],
            },
        ),
        migrations.CreateModel(
            name="VtScanService",
            fields=[
                (
                    "id",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="服务名称")),
                (
                    "name_en",
                    models.CharField(
                        default="", max_length=255, verbose_name="服务英文名称"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("enable", "服务中"),
                            ("disable", "停止服务"),
                            ("deleted", "删除"),
                        ],
                        default="enable",
                        max_length=32,
                        verbose_name="服务状态",
                    ),
                ),
                (
                    "remark",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="备注"
                    ),
                ),
                (
                    "host_scan_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        verbose_name="主机扫描单价",
                    ),
                ),
                (
                    "web_scan_price",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0"),
                        max_digits=10,
                        verbose_name="站点扫描单价",
                    ),
                ),
                (
                    "pay_app_service_id",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="此服务对应的APP结算服务单元（注册在余额结算中的APP服务）id，扣费时需要此id，用于指定哪个服务发生的扣费；正常情况下此内容会自动填充，不需要手动输入",
                        max_length=36,
                        verbose_name="余额结算APP服务ID",
                    ),
                ),
                (
                    "add_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="添加时间"),
                ),
            ],
            options={
                "verbose_name": "服务配置",
                "verbose_name_plural": "服务配置",
                "ordering": ["-add_time"],
            },
        ),
        migrations.CreateModel(
            name="VtTask",
            fields=[
                (
                    "id",
                    models.CharField(
                        blank=True,
                        editable=False,
                        max_length=36,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="任务名称")),
                ("priority", models.IntegerField(default=2, verbose_name="任务优先级")),
                ("target", models.CharField(max_length=255, verbose_name="扫描目标")),
                (
                    "type",
                    models.CharField(
                        choices=[("web", "站点扫描"), ("host", "主机扫描")],
                        max_length=8,
                        verbose_name="任务类型",
                    ),
                ),
                (
                    "task_status",
                    models.CharField(
                        choices=[
                            ("queued", "排队等待"),
                            ("running", "正在运行"),
                            ("done", "运行完成"),
                            ("failed", "运行失败"),
                        ],
                        default="queued",
                        max_length=16,
                        verbose_name="任务状态",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "finish_time",
                    models.DateTimeField(blank=True, default=None, null=True, verbose_name="结束时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "remark",
                    models.CharField(
                        blank=True, default="", max_length=255, verbose_name="备注"
                    ),
                ),
                (
                    "payment_history_id",
                    models.CharField(
                        blank=True, default="", max_length=36, verbose_name="支付记录id"
                    ),
                ),
                (
                    "running_status",
                    models.CharField(
                        choices=[
                            ("spider", "爬虫"),
                            ("ajaxspider", "Ajax爬虫"),
                            ("active", "主动扫描"),
                            ("passive", "被动扫描"),
                            ("done", "运行结束"),
                        ],
                        max_length=16,
                        null=True,
                        verbose_name="内部扫描状态",
                    ),
                ),
                (
                    "running_id",
                    models.CharField(
                        blank=True, default='', max_length=36, null=True, verbose_name="内部扫描id"
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="scan.vtreport",
                        verbose_name="扫描报告",
                    ),
                ),
                (
                    "scanner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tasks",
                        to="scan.vtscanner",
                        verbose_name="扫描器",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="所属用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "漏洞扫描任务",
                "verbose_name_plural": "漏洞扫描任务",
                "ordering": ["-update_time"],
            },
        ),
    ]
