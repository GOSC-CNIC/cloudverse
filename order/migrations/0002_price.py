# Generated by Django 3.2.5 on 2022-03-11 07:52

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('order', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.CharField(blank=True, editable=False, max_length=36, primary_key=True, serialize=False, verbose_name='ID')),
                ('vm_ram', models.DecimalField(decimal_places=5, help_text='内存每GiB每天的价格', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='内存GiB每天')),
                ('vm_cpu', models.DecimalField(decimal_places=5, help_text='每个CPU每天的价格', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='每CPU每天')),
                ('vm_pub_ip', models.DecimalField(decimal_places=5, help_text='每个公网IP每天的价格', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='每公网IP每天')),
                ('vm_disk', models.DecimalField(decimal_places=5, help_text='系统盘每GiB每天的价格', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='系统盘GiB每天')),
                ('vm_disk_snap', models.DecimalField(decimal_places=5, help_text='云盘快照每GiB每天的价格', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='云盘快照GiB每天')),
                ('vm_upstream', models.DecimalField(decimal_places=5, help_text='云主机上行流量每GiB的价格', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='云主机上行流量每GiB')),
                ('vm_downstream', models.DecimalField(decimal_places=5, help_text='云主机下行流量每GiB的价格', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='云主机下行流量每GiB')),
                ('disk_size', models.DecimalField(decimal_places=5, help_text='云盘每GiB每天的价格', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='云盘GiB每天')),
                ('disk_snap', models.DecimalField(decimal_places=5, help_text='云盘快照每GiB每天的价格', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='云盘快照GiB每天')),
                ('obj_size', models.DecimalField(decimal_places=5, help_text='对象存储每GiB每天的价格', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='对象存储GiB每天')),
                ('obj_upstream', models.DecimalField(decimal_places=5, help_text='对象存储上行流量每GiB的价格', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='对象存储上行流量每GiB')),
                ('obj_downstream', models.DecimalField(decimal_places=5, help_text='对象存储下行流量每GiB的价格', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='对象存储下行流量每GiB')),
                ('obj_replication', models.DecimalField(decimal_places=5, help_text='对象存储同步流量每GiB的价格', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='对象存储同步流量每GiB')),
                ('obj_get_request', models.DecimalField(decimal_places=5, help_text='对象存储每万次get请求', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='对象存储每万次get请求')),
                ('obj_put_request', models.DecimalField(decimal_places=5, help_text='对象存储每万次put请求', max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='对象存储每万次put请求')),
                ('prepaid_discount', models.PositiveSmallIntegerField(default=100, help_text='0-100, 包年包月预付费价格在按量计价的基础上按此折扣计价', validators=[django.core.validators.MaxValueValidator(100)], verbose_name='预付费折扣**%')),
                ('creation_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '资源计价定价',
                'verbose_name_plural': '资源计价定价',
                'db_table': 'price',
                'ordering': ['-creation_time'],
            },
        ),
    ]
