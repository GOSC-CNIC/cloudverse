# Generated by Django 4.2.4 on 2023-08-29 08:00

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bucket',
            fields=[
                ('id', models.CharField(blank=True, editable=False, max_length=36, primary_key=True, serialize=False, verbose_name='ID')),
                ('bucket_id', models.CharField(help_text='存储桶在对象存储服务单元中的id', max_length=36, verbose_name='存储桶ID')),
                ('name', models.CharField(max_length=63, verbose_name='存储桶名称')),
                ('creation_time', models.DateTimeField(verbose_name='创建时间')),
                ('task_status', models.CharField(choices=[('created', '创建成功'), ('creating', '正在创建中'), ('failed', '创建失败')], default='created', max_length=16, verbose_name='创建状态')),
                ('situation', models.CharField(choices=[('normal', '正常'), ('arrearage', '欠费'), ('arrears-lock', '欠费锁定'), ('lock', '锁定')], default='normal', help_text='欠费状态下存储桶读写锁定管控情况', max_length=16, verbose_name='过期欠费管控情况')),
                ('situation_time', models.DateTimeField(blank=True, default=None, help_text='欠费管控开始时间', null=True, verbose_name='管控情况时间')),
                ('storage_size', models.BigIntegerField(blank=True, default=0, verbose_name='桶存储容量')),
                ('object_count', models.IntegerField(blank=True, default=0, verbose_name='桶对象数量')),
                ('stats_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='桶资源统计时间')),
                ('tag', models.CharField(blank=True, choices=[('', '无'), ('special', '专项')], default='', max_length=32, verbose_name='标签')),
            ],
            options={
                'verbose_name': '存储桶',
                'verbose_name_plural': '存储桶',
                'db_table': 'bucket',
                'ordering': ['-creation_time'],
            },
        ),
        migrations.CreateModel(
            name='BucketArchive',
            fields=[
                ('id', models.CharField(blank=True, editable=False, max_length=36, primary_key=True, serialize=False, verbose_name='ID')),
                ('bucket_id', models.CharField(help_text='存储桶在对象存储服务单元中的id', max_length=36, verbose_name='存储桶ID')),
                ('name', models.CharField(max_length=63, verbose_name='存储桶名称')),
                ('creation_time', models.DateTimeField(verbose_name='创建时间')),
                ('task_status', models.CharField(choices=[('created', '创建成功'), ('creating', '正在创建中'), ('failed', '创建失败')], default='created', max_length=16, verbose_name='创建状态')),
                ('situation', models.CharField(choices=[('normal', '正常'), ('arrearage', '欠费'), ('arrears-lock', '欠费锁定'), ('lock', '锁定')], default='normal', help_text='欠费状态下存储桶读写锁定管控情况', max_length=16, verbose_name='过期欠费管控情况')),
                ('situation_time', models.DateTimeField(blank=True, default=None, help_text='欠费管控开始时间', null=True, verbose_name='管控情况时间')),
                ('storage_size', models.BigIntegerField(blank=True, default=0, verbose_name='桶存储容量')),
                ('object_count', models.IntegerField(blank=True, default=0, verbose_name='桶对象数量')),
                ('stats_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='桶资源统计时间')),
                ('tag', models.CharField(blank=True, choices=[('', '无'), ('special', '专项')], default='', max_length=32, verbose_name='标签')),
                ('original_id', models.CharField(default='', help_text='存储桶删除前在存储桶表中原始id', max_length=36, verbose_name='存储桶删除前原始id')),
                ('delete_time', models.DateTimeField(auto_now_add=True, verbose_name='删除时间')),
                ('archiver', models.CharField(blank=True, default='', max_length=128, verbose_name='删除归档人')),
            ],
            options={
                'verbose_name': '存储桶归档记录',
                'verbose_name_plural': '存储桶归档记录',
                'db_table': 'bucket_archive',
                'ordering': ['-delete_time'],
            },
        ),
        migrations.CreateModel(
            name='ObjectsService',
            fields=[
                ('id', models.CharField(blank=True, editable=False, max_length=36, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='服务名称')),
                ('name_en', models.CharField(default='', max_length=255, verbose_name='服务英文名称')),
                ('service_type', models.CharField(choices=[('iharbor', 'iHarbor'), ('swift', 'Swift'), ('s3', 'S3')], default='iharbor', max_length=16, verbose_name='服务平台类型')),
                ('endpoint_url', models.CharField(help_text='http(s)://{hostname}:{port}/', max_length=255, verbose_name='服务地址url')),
                ('api_version', models.CharField(default='v1', help_text='预留，主要iHarbor使用', max_length=64, verbose_name='API版本')),
                ('username', models.CharField(help_text='用于此服务认证的用户名', max_length=128, verbose_name='用户名')),
                ('password', models.CharField(max_length=128, verbose_name='密码')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('status', models.CharField(choices=[('enable', '服务中'), ('disable', '停止服务'), ('deleted', '删除')], default='enable', max_length=16, verbose_name='服务状态')),
                ('remarks', models.CharField(blank=True, default='', max_length=255, verbose_name='备注')),
                ('extra', models.CharField(blank=True, default='', help_text='json格式', max_length=1024, verbose_name='其他配置')),
                ('provide_ftp', models.BooleanField(default=True, verbose_name='是否提供FTP服务')),
                ('ftp_domains', models.CharField(blank=True, default='', help_text='多个域名时以,分割', max_length=1024, verbose_name='FTP服务域名或IP')),
                ('contact_person', models.CharField(blank=True, default='', max_length=128, verbose_name='联系人名称')),
                ('contact_email', models.EmailField(blank=True, default='', max_length=254, verbose_name='联系人邮箱')),
                ('contact_telephone', models.CharField(blank=True, default='', max_length=16, verbose_name='联系人电话')),
                ('contact_fixed_phone', models.CharField(blank=True, default='', max_length=16, verbose_name='联系人固定电话')),
                ('contact_address', models.CharField(blank=True, default='', max_length=256, verbose_name='联系人地址')),
                ('logo_url', models.CharField(blank=True, default='', max_length=256, verbose_name='LOGO url')),
                ('longitude', models.FloatField(blank=True, default=0, verbose_name='经度')),
                ('latitude', models.FloatField(blank=True, default=0, verbose_name='纬度')),
                ('pay_app_service_id', models.CharField(default='', help_text='此服务对应的APP服务（注册在余额结算中的APP服务）id，扣费时需要此id，用于指定哪个服务发生的扣费', max_length=36, verbose_name='余额结算APP服务ID')),
                ('sort_weight', models.IntegerField(default=0, help_text='值越小排序越靠前', verbose_name='排序值')),
                ('loki_tag', models.CharField(blank=True, default='', help_text='服务单元在Loki访问日志中对应的对象存储集群标识，用于计量网络流量、请求量等信息时标识对应关系', max_length=128, verbose_name='对应loki日志中集群标识')),
            ],
            options={
                'verbose_name': '对象存储服务单元接入配置',
                'verbose_name_plural': '对象存储服务单元接入配置',
                'db_table': 'object_service',
                'ordering': ['sort_weight'],
            },
        ),
        migrations.CreateModel(
            name='StorageQuota',
            fields=[
                ('id', models.CharField(blank=True, editable=False, max_length=36, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_total', models.IntegerField(default=0, verbose_name='存储桶数')),
                ('count_used', models.IntegerField(default=0, verbose_name='已创建存储桶数')),
                ('size_gb_total', models.IntegerField(default=0, help_text='Gb', verbose_name='总存储容量')),
                ('size_gb_used', models.IntegerField(default=0, help_text='Gb', verbose_name='已用存储容量')),
                ('creation_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('expiration_time', models.DateTimeField(blank=True, default=None, null=True, verbose_name='过期时间')),
                ('deleted', models.BooleanField(default=False, verbose_name='删除')),
                ('is_email', models.BooleanField(default=False, help_text='是否邮件通知用户配额即将到期', verbose_name='是否邮件通知')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='storage_quotas', to='storage.objectsservice', verbose_name='所属服务')),
            ],
            options={
                'verbose_name': '存储配额',
                'verbose_name_plural': '存储配额',
                'db_table': 'storage_quota',
                'ordering': ['-creation_time'],
            },
        ),
    ]
