# Generated by Django 2.2.13 on 2020-06-08 07:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='服务名称')),
                ('region_id', models.CharField(blank=True, default='', max_length=128, verbose_name='服务区域/分中心ID')),
                ('service_type', models.SmallIntegerField(choices=[(0, 'EVCloud'), (1, 'OpenStack')], default=0, verbose_name='服务平台类型')),
                ('endpoint_url', models.CharField(help_text='http(s)://{hostname}:{port}/', max_length=300, verbose_name='服务地址url')),
                ('api_version', models.CharField(default='v3', help_text='预留，主要EVCloud使用', max_length=64, verbose_name='API版本')),
                ('username', models.CharField(help_text='用于此服务认证的用户名', max_length=128, verbose_name='用户名')),
                ('password', models.CharField(max_length=128, verbose_name='密码')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('active', models.BooleanField(default=True, help_text='指示此配置是否可用', verbose_name='可用状态')),
                ('remarks', models.CharField(blank=True, default='', max_length=255, verbose_name='备注')),
            ],
            options={
                'verbose_name': '服务接入配置',
                'verbose_name_plural': '服务接入配置',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='服务器实例名称')),
                ('instance_id', models.CharField(help_text='各接入服务中虚拟主机的ID', max_length=128, verbose_name='虚拟主机ID')),
                ('flavor_id', models.CharField(help_text='cpu数、内存大小等硬件配置', max_length=128, verbose_name='硬件配置类型ID')),
                ('vcpus', models.IntegerField(default=0, verbose_name='虚拟CPU数')),
                ('ram', models.IntegerField(default=0, verbose_name='内存MB')),
                ('ipv4', models.CharField(default='', max_length=128, verbose_name='IPV4')),
                ('image_id', models.CharField(default='', max_length=128, verbose_name='镜像ID')),
                ('image', models.CharField(default='', max_length=255, verbose_name='镜像系统名称')),
                ('creation_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('remarks', models.CharField(default='', max_length=255, verbose_name='备注')),
                ('deleted', models.BooleanField(default=False, editable=False, verbose_name='删除')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='server_set', to='servers.ServiceConfig', verbose_name='接入的服务配置')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_vms', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': '虚拟服务器',
                'verbose_name_plural': '虚拟服务器',
                'ordering': ['-id'],
            },
        ),
    ]
